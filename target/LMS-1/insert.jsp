<%@ page import="java.sql.*" %>
<%@ page contentType="text/html;charset=UTF-8" language="java" %>
<!DOCTYPE html>
<html>
<head>
  <meta charset="UTF-8">
  <title>LMS: Insert All Records</title>
  <style>
    body { font-family: Arial, sans-serif; background-color: #f4f4f9; padding: 20px; }
    h2 { color: green; }
    h3 { color: red; }
  </style>
</head>
<body>
    <%
    Connection con = null;
    try {
        // Load MySQL JDBC Driver and connect to the LMS database.
        Class.forName("com.mysql.cj.jdbc.Driver");
        con = DriverManager.getConnection("jdbc:mysql://localhost:3306/lms?useSSL=false", "lms", "lms");
  
        // 1. Insert into Departments
        String sqlDept = "INSERT INTO Departments (department_id, name) VALUES (?, ?)";
        PreparedStatement psDept = con.prepareStatement(sqlDept);
        psDept.setString(1, "DPT001");
        psDept.setString(2, "Computer Science");
        psDept.executeUpdate();
  
        // 2. Insert into Courses
        String sqlCourse = "INSERT INTO Courses (course_id, name, department_id) VALUES (?, ?, ?)";
        PreparedStatement psCourse = con.prepareStatement(sqlCourse);
        psCourse.setString(1, "CSE101");
        psCourse.setString(2, "Intro to Programming");
        psCourse.setString(3, "DPT001");
        psCourse.executeUpdate();
  
        // 3. Insert into Hostels
        String sqlHostel = "INSERT INTO Hostels (hostel_id, name) VALUES (?, ?)";
        PreparedStatement psHostel = con.prepareStatement(sqlHostel);
        psHostel.setString(1, "HST001");
        psHostel.setString(2, "Main Hostel");
        psHostel.executeUpdate();
  
        // 4. Insert into wardens
        String sqlWarden = "INSERT INTO wardens (warden_id, name, phone, email, Image, hostel_id) VALUES (?, ?, ?, ?, ?, ?)";
        PreparedStatement psWarden = con.prepareStatement(sqlWarden);
        psWarden.setString(1, "WARD001");
        psWarden.setString(2, "John Warden");
        psWarden.setString(3, "1234567890");
        psWarden.setString(4, "warden@example.com");
        psWarden.setBytes(5, null);  // For Image, passing null (or load a byte array if available)
        psWarden.setString(6, "HST001");
        psWarden.executeUpdate();
  
        // 5. Insert into vo
        String sqlVO = "INSERT INTO vo (vo_id, name, phone, email, Image, department_id) VALUES (?, ?, ?, ?, ?, ?)";
        PreparedStatement psVO = con.prepareStatement(sqlVO);
        psVO.setString(1, "VO001");
        psVO.setString(2, "Alice VO");
        psVO.setString(3, "2345678901");
        psVO.setString(4, "vo@example.com");
        psVO.setBytes(5, null);
        psVO.setString(6, "DPT001");
        psVO.executeUpdate();
  
        // 6. Insert into hod
        String sqlHOD = "INSERT INTO hod (hod_id, name, phone, email, Image, department_id) VALUES (?, ?, ?, ?, ?, ?)";
        PreparedStatement psHOD = con.prepareStatement(sqlHOD);
        psHOD.setString(1, "HOD001");
        psHOD.setString(2, "Dr. Smith");
        psHOD.setString(3, "3456789012");
        psHOD.setString(4, "hod@example.com");
        psHOD.setBytes(5, null);
        psHOD.setString(6, "DPT001");
        psHOD.executeUpdate();
  
        // 7. Insert into Students
        String sqlStudent = "INSERT INTO Students (student_id, name, rno, email, dob, phone, address, department_id, course_id, hostel_id, year, Image) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
        PreparedStatement psStudent = con.prepareStatement(sqlStudent);
        psStudent.setString(1, "STU001");
        psStudent.setString(2, "Bob Student");
        psStudent.setInt(3, 101);
        psStudent.setString(4, "student@example.com");
        psStudent.setString(5, "2000-01-01");
        psStudent.setString(6, "4567890123");
        psStudent.setString(7, "123 Main St");
        psStudent.setString(8, "DPT001");
        psStudent.setString(9, "CSE101");
        psStudent.setString(10, "HST001");
        psStudent.setString(11, "1st");
        psStudent.setBytes(12, null);
        psStudent.executeUpdate();
  
        // 8. Insert into Guardians
        // The guardian_id will be auto-generated by the trigger.
        String sqlGuardian = "INSERT INTO Guardians (name, email, phone, address, Image, student_id) VALUES (?, ?, ?, ?, ?, ?)";
        PreparedStatement psGuardian = con.prepareStatement(sqlGuardian);
        psGuardian.setString(1, "Mary Guardian");
        psGuardian.setString(2, "guardian@example.com");
        psGuardian.setString(3, "5678901234");
        psGuardian.setString(4, "456 Guardian St");
        psGuardian.setBytes(5, null);
        psGuardian.setString(6, "STU001");
        psGuardian.executeUpdate();
  
        // 9. Insert into admin
        String sqlAdmin = "INSERT INTO admin (admin_id, name, phone, email) VALUES (?, ?, ?, ?)";
        PreparedStatement psAdmin = con.prepareStatement(sqlAdmin);
        psAdmin.setString(1, "ADM001");
        psAdmin.setString(2, "Admin User");
        psAdmin.setString(3, "6789012345");
        psAdmin.setString(4, "admin@example.com");
        psAdmin.executeUpdate();
  
        // 10. Insert into slogin (Student login)
        String sqlSlogin = "INSERT INTO slogin (student_id, password) VALUES (?, ?)";
        PreparedStatement psSlogin = con.prepareStatement(sqlSlogin);
        psSlogin.setString(1, "STU001");
        psSlogin.setString(2, "studentPass");
        psSlogin.executeUpdate();
  
        // 11. Insert into glogin (Guardian login)
        // Retrieve the auto-generated guardian_id using the unique email.
        String sqlFetchGuardian = "SELECT guardian_id FROM Guardians WHERE email = ?";
        PreparedStatement psFetchGuardian = con.prepareStatement(sqlFetchGuardian);
        psFetchGuardian.setString(1, "guardian@example.com");
        ResultSet rs = psFetchGuardian.executeQuery();
        String guardianId = "";
        if(rs.next()){
            guardianId = rs.getString("guardian_id");
        }
        rs.close();
        PreparedStatement psGlogin = con.prepareStatement("INSERT INTO glogin (guardian_id, password) VALUES (?, ?)");
        psGlogin.setString(1, guardianId);
        psGlogin.setString(2, "guardianPass");
        psGlogin.executeUpdate();
  
        // 12. Insert into wlogin (Warden login)
        String sqlWlogin = "INSERT INTO wlogin (warden_id, password) VALUES (?, ?)";
        PreparedStatement psWlogin = con.prepareStatement(sqlWlogin);
        psWlogin.setString(1, "WARD001");
        psWlogin.setString(2, "wardenPass");
        psWlogin.executeUpdate();
  
        // 13. Insert into vologin (VO login)
        String sqlVologin = "INSERT INTO vologin (vo_id, password) VALUES (?, ?)";
        PreparedStatement psVologin = con.prepareStatement(sqlVologin);
        psVologin.setString(1, "VO001");
        psVologin.setString(2, "voPass");
        psVologin.executeUpdate();
  
        // 14. Insert into hodlogin (HOD login)
        String sqlHodlogin = "INSERT INTO hodlogin (hod_id, password) VALUES (?, ?)";
        PreparedStatement psHodlogin = con.prepareStatement(sqlHodlogin);
        psHodlogin.setString(1, "HOD001");
        psHodlogin.setString(2, "hodPass");
        psHodlogin.executeUpdate();
  
        // 15. Insert into alogin (Admin login)
        String sqlAdminlogin = "INSERT INTO alogin (admin_id, password) VALUES (?, ?)";
        PreparedStatement psAdminlogin = con.prepareStatement(sqlAdminlogin);
        psAdminlogin.setString(1, "ADM001");
        psAdminlogin.setString(2, "adminPass");
        psAdminlogin.executeUpdate();
  
        // --- Mail the Guardian's credentials ---
        // Generate a random password for the guardian (if not hard-coded) and update the glogin accordingly.
        String newGuardianPassword = generateRandomPassword();
        // Update the guardian's login password (this example simply overwrites the earlier password)
        PreparedStatement psUpdateGlogin = con.prepareStatement("UPDATE glogin SET password = ? WHERE guardian_id = ?");
        psUpdateGlogin.setString(1, newGuardianPassword);
        psUpdateGlogin.setString(2, guardianId);
        psUpdateGlogin.executeUpdate();
        
        // Send email with the new guardian credentials.
        sendEmail("guardian@example.com", guardianId, newGuardianPassword);
  
        out.println("<h2>All records inserted successfully and Guardian email sent!</h2>");
  
        // Close all PreparedStatements.
        psDept.close();
        psCourse.close();
        psHostel.close();
        psWarden.close();
        psVO.close();
        psHOD.close();
        psStudent.close();
        psGuardian.close();
        psAdmin.close();
        psSlogin.close();
        psFetchGuardian.close();
        psGlogin.close();
        psWlogin.close();
        psVologin.close();
        psHodlogin.close();
        psAdminlogin.close();
        psUpdateGlogin.close();
        
    } catch(Exception e) {
        out.println("<h3>Error: " + e.getMessage() + "</h3>");
    } finally {
        if(con != null) {
            try { con.close(); } catch(SQLException se) { out.println("<h3>SQL Error: " + se.getMessage() + "</h3>"); }
        }
    }
  %>
</body>
</html>
